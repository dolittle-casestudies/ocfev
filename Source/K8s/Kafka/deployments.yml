---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: zookeeper
  namespace: ocfev
spec:
  template:
    metadata:
      labels:
        app: kafka
        name: zookeeper
    spec:
      containers:
      - name: zoo1
        image: digitalwonderland/zookeeper
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 2181
        env:
        - name: ZOOKEEPER_ID
          value: "1"
        - name: ZOOKEEPER_SERVER_1
          value: zoo1
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kafka
  namespace: ocfev
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: kafka
        name: kafka
        id: "1"
    spec:
      containers:
      - name: kafka
        image: wurstmeister/kafka
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 9092
        env:
          - name: KAFKA_ADVERTISED_PORT
            value: "9092"
          - name: KAFKA_ADVERTISED_HOST_NAME
            value: "kafka-service"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zoo1:2181"
          - name: KAFKA_BROKER_ID
            value: "1"
          - name: KAFKA_CREATE_TOPICS
            value: "ingestion:1:1,visualization:1:1,vesselip:1:1"
          - name: KAFKA_LOG_RETENTION_BYTES
            value: "-1"
        volumeMounts:
        - mountPath: "/kafka"
          name: datadir
      volumes:
      - name: datadir
        persistentVolumeClaim:
          claimName: kafka
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: kafka-manager
  namespace: ocfev
spec:
  template:
    metadata:
      labels:
        app: kafka
        name: kafka-manager
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: kafka-manager
        image: sheepkiller/kafka-manager
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9000
        env:
        - name: ZK_HOSTS
          value: "zoo1:2181"
